<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" applicationDPI="160" addedToStage="onAddedToStage(event)">
	
	<fx:Script>
		<![CDATA[
			import com.freshplanet.ane.AirAACPlayer.AirAACPlayer;
			
			[Embed(source="m4a_urls.json", mimeType="application/octet-stream")]
			private static const M4aUrls:Class;
			
			private var m4aUrls:Array;
			
			private var player:AirAACPlayer;
			
			private var isPlaying:Boolean;
			
			protected function onAddedToStage(event:Event):void
			{
				var m4aUrlsData:ByteArray = new M4aUrls() as ByteArray;
				m4aUrls = JSON.parse(m4aUrlsData.readUTFBytes(m4aUrlsData.length)) as Array;
				
				var timer:Timer = new Timer(50);
				timer.addEventListener(TimerEvent.TIMER, onTimerTick);
				timer.start();
			}
			
			protected function onTimerTick(event:TimerEvent):void
			{
				if (isPlaying)
				{
					status.text = "Playing... (progress = " + player.progress + ")";
				}
			}
			
			protected function onClickLoad(event:MouseEvent):void
			{
				if (player) onClickDispose(null);
				
				var randomIndex:int = Math.floor(Math.random()*m4aUrls.length);
				var randomURL:String = m4aUrls[randomIndex];
				player = new AirAACPlayer(randomURL);
				player.addEventListener(AirAACPlayer.AAC_PLAYER_PREPARED, onPlayerPrepared, false, 0, true);
				player.load();
				status.text = "Loading...";
			}
			
			protected function onClickDispose(event:MouseEvent):void
			{
				if (player)
				{
					player.dispose();
					player = null;
					isPlaying = false;
					status.text = "Disposed";
				}
			}
			
			protected function onClickPlay(event:MouseEvent):void
			{
				if (player)
				{
					player.play();
					isPlaying = true;
				}
			}
			
			protected function onClickPause(event:MouseEvent):void
			{
				if (player)
				{
					player.pause();
					isPlaying = false;
					status.text = "Paused"
				}
			}
			
			protected function onClickStop(event:MouseEvent):void
			{
				if (player)
				{
					player.stop();
					isPlaying = false;
					status.text = "Stopped";
				}
			}
			
			protected function onPlayerPrepared(event:Event):void
			{
				status.text = "Player prepared (duration = " + player.duration + ")";
			}
		]]>
	</fx:Script>
	
	<s:Label x="50" y="50" width="50" height="30">Status: </s:Label>
	<s:Label x="110" y="50" width="200" height="30" id="status"></s:Label>
	<s:Button x="50" y="100" width="100" height="50" click="onClickLoad(event)">Load</s:Button>
	<s:Button x="50" y="160" width="100" height="50" click="onClickDispose(event)">Dispose</s:Button>
	<s:Button x="50" y="220" width="100" height="50" click="onClickPlay(event)">Play</s:Button>
	<s:Button x="50" y="280" width="100" height="50" click="onClickPause(event)">Pause</s:Button>
	<s:Button x="50" y="340" width="100" height="50" click="onClickStop(event)">Stop</s:Button>
	
</s:Application>
